import { Injectable } from '@angular/core';

import { Observable } from 'rxjs/Observable';
import 'rxjs/add/operator/map';

import { AngularFireAuth } from 'angularfire2/auth';
import { AngularFireDatabase } from 'angularfire2/database';

import * as firebase from 'firebase/app';

import { ToastProvider } from '../toast/toast';


@Injectable()
export class AuthProvider {

  user: Observable<firebase.User>;
  companyIdRef;
  companyId: string;
  uid: string;

  constructor(public afAuth: AngularFireAuth,
    public toastCtrl: ToastProvider, public db: AngularFireDatabase) {
    this.user = afAuth.authState;

  }

// CREATE USER WITH EMAIL
// * waitingPage: this will be set to true until the user has either registered
// a company, or has used an access code.
  createUserWithEmail(firstName: string, lastName: string, email: string,
    password: string):firebase.Promise<any>{
    return this.afAuth.auth.createUserWithEmailAndPassword(email, password)
    .then(newUser => {
      firebase.database().ref('users').child(newUser.uid)
      .set({firstName: firstName, lastName: lastName, email: email,
        provider: 'email', waitingPage: true })

      // firebase.database().ref('allUsers').child(firstName+ ' ' + lastName)
      // .set(newUser.uid)
      this.toastCtrl.accountCreatedToast();
    })
  }

  loginUserWithEmail(email: string, password: string):firebase.Promise<any>{
    return this.afAuth.auth.signInWithEmailAndPassword(email, password)
    .then(newUser => {
      this.toastCtrl.loginToast();
    })
  }

  logout(){
    this.afAuth.auth.signOut();
    this.toastCtrl.loggedOutToast();
  }

// Register Company Function
  registerCompany(companyName: string):any {
    // we get a reference to a new child node of 'companies'
    var newCompnayRef = firebase.database().ref('companies').push();
    // we save the company within firebase.
    newCompnayRef.set({CompanyName: companyName, owner: this.afAuth.auth.currentUser.uid});

    // Here we get the unique key generated by push()
    // we use this key to link the user and compnay in the database.
    var companyId = newCompnayRef.key;

    // Now we add the company to the user who created it, within the database.
    firebase.database().ref('users')
    .child(this.afAuth.auth.currentUser.uid).update({companies: companyId});
    return;
  }

}
